class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
class Solution98:
    def isValidBST(self, root: TreeNode) :
        
        self.check(root,float('inf'),float('-inf'))
        
        
    def check(self,node,max_val,min_val):
        if node is None:
            return True
        
        if node.val>max_val or node.val<min_val:
            return False
        
        return self.check(node.left,node.val,min_val) and self.check(node.right,max_val,node.val)